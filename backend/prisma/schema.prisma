generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id            String    @id @default(uuid())
  license_plate String    @unique
  make          String
  model         String
  model_year    String
  color         String
  fuel_type     String
  vin           String
  reg_date      String
  drivetrain    String
  warranty      String
  created_at    DateTime  @default(now())
  modified_at   DateTime  @updatedAt
  contract      Contract? @relation("CarToContract")

  contract_id String? @unique
}

model Customer {
  id                  String     @id @default(uuid())
  first_name          String
  last_name           String
  phone_number        String
  email               String
  customer_address_1  String
  customer_address_2  String
  customer_address_3  String
  customer_address_4  String
  customer_tax_number String
  created_at          DateTime   @default(now())
  modified_at         DateTime   @updatedAt
  contracts           Contract[]
}

model Company {
  id                   String     @id @default(uuid())
  company              String
  company_tax_number   String
  contact_phone_number String
  reg_number           String
  company_address_1    String
  company_address_2    String
  company_address_3    String
  company_address_4    String
  created_at           DateTime   @default(now())
  modified_at          DateTime   @updatedAt
  contracts            Contract[]
}

model Contract {
  id              String   @id @default(uuid())
  contract_number String   @unique
  license_plate   String
  customer_name   String
  company_name    String
  contract_exp    String
  created_at      DateTime @default(now())
  modified_at     DateTime @updatedAt
  company_id      String
  car_id          String   @unique
  customer_id     String

  company  Company  @relation(fields: [company_id], references: [id], onDelete: Cascade)
  car      Car      @relation(name: "CarToContract", fields: [car_id], references: [id], onDelete: Cascade)
  customer Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model Color {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
}

model Warranty {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
}

model Make {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
}
